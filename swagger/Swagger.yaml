openapi: 3.0.0
info:
  title: Job Search API
  description: 채용정보 검색 API
  version: 1.0.0

servers:
  - url: http://localhost:443

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # 필요한 스키마 정의 (예: User, JobPosting 등)

security:
  - bearerAuth: []

paths:
  /auth/register:
    post:
      summary: 회원가입
      description: 새로운 사용자를 등록합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 사용자의 이메일
                  example: gyeong@example.com
                password:
                  type: string
                  description: 사용자의 비밀번호
                  example: password123
                name:
                  type: string
                  description: 사용자의 이름
                  example: 강경태
              required:
                - email
                - password
                - name
      responses:
        201:
          description: 회원가입 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 응답 메시지
                    example: 회원가입이 완료되었습니다.
        400:
          description: 잘못된 요청

  /auth/login:
    post:
      summary: 로그인
      description: 사용자가 로그인합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 사용자의 이메일
                  example: gyeong@example.com
                password:
                  type: string
                  description: 사용자의 비밀번호
                  example: password123
              required:
                - email
                - password
      responses:
        200:
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 로그인 응답 메시지
                    example: 로그인 성공
                  accessToken:
                    type: string
                    description: JWT 토큰
                  tokenType:
                    type: string
                    description: 토큰 타입
                    example: Bearer
        400:
          description: 잘못된 요청

  /users/me:
    get:
      summary: 회원 정보 조회
      description: 현재 로그인된 사용자의 정보를 반환합니다.
      security:
        - bearerAuth: []
      responses:
        200:
          description: 회원 정보 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: 사용자 ID
                        example: userID
                      email:
                        type: string
                        description: 사용자 이메일
                        example: gyeong@example.com
                      name:
                        type: string
                        description: 사용자 이름
                        example: 강경태
                      createdAt:
                        type: string
                        description: 계정 생성일
                        example: 2024-01-01T00:00:00.000Z
                      updatedAt:
                        type: string
                        description: 계정 수정일
                        example: 2024-01-02T00:00:00.000Z
    delete:
      summary: 회원 탈퇴
      description: 현재 로그인된 사용자의 계정을 삭제합니다.
      security:
        - bearerAuth: []
      responses:
        200:
          description: 회원 탈퇴 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 응답 메시지
                    example: 회원 탈퇴 완료

  /jobs:
    get:
      summary: 모든 채용 공고 조회
      description: 채용 공고 목록을 검색, 필터링 및 정렬하여 반환합니다.
      parameters:
        - name: page
          in: query
          description: 페이지 번호
          schema:
            type: integer
          example: 1
        - name: limit
          in: query
          description: 페이지 당 항목 수
          schema:
            type: integer
          example: 10
        - name: search
          in: query
          description: 검색어
          schema:
            type: string
          example: 백엔드
        - name: location
          in: query
          description: 지역 필터
          schema:
            type: string
          example: 서울
        - name: experience
          in: query
          description: 경력 필터
          schema:
            type: string
          example: 3년
        - name: sort
          in: query
          description: 정렬 기준 필드명
          schema:
            type: string
          example: createdAt
      responses:
        200:
          description: A list of jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                      description: Job title
                      example: 프론트엔드 개발자
                    company:
                      type: string
                      description: Company name
                      example: ABC Corp
                    location:
                      type: string
                      description: Job location
                      example: 서울
                    experience:
                      type: string
                      description: Experience required
                      example: 3년

  # 추가적인 엔드포인트들...

